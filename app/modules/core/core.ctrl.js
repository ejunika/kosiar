( function() { "use strict";        /**     * The callback function which will be executed when requirejs finished loading the dependencies.     * @param  {[type]} coreModule The core modue     * @param  {[type]} appConfig  The application configuration object     * @return {[type]}            undefined     */    var requireCallback = function( coreModule, appConfig ) {        var        /**         * [coreCtrl description]         * @param  {[type]} $scope          [description]         * @param  {[type]} $injector       [description]         * @param  {[type]} coreDataService [description]         * @param  {[type]} backendService  [description]         * @return {[type]}                 [description]         */        coreCtrl = function( $scope, $injector, coreDataService, backendService ) {                        /**             * [init description]             * @return {[type]} [description]             */            $scope.init = function() {                $scope.showOptions = false;                $scope.checkTransclude = "Done";                backendService.loginInfo = {                    userId: "",                    spaces: []                };                $scope.appView = {                    view: "DEFAULT",                    includePath: "app/modules/core/core.view.html"                };                // The login process                //$scope.doLogin( "vimal.m@bdisys.com", "admin", "ep" );                            };            /**             * [getAllSpaces description]             * @param  {[type]}   userId [description]             * @param  {Function} cb     [description]             * @return {[type]}          [description]             */            $scope.getAllSpaces = function( userId, cb ) {                var                reqUrl = "http://192.168.1.10:8181/cxf/auth/getcustomerkeys",                reqData = {                    userid: userId                },                sCallback = function( sData, sStatus, x, y ) {                    var                    spaces                    try {                        if( sData != undefined ) {                            spaces = sData.space;                            if( !Array.isArray( spaces ) ) {                                spaces = [ spaces ];                            }                            backendService.loginInfo.spaces = spaces;                            if( typeof( cb ) === "function" ) {                                cb( spaces );                            }                        }                    }                    catch( error ) {                        console.error( error );                    }                },                eCallback = function( eData, eStatus, x, y ) {                };                backendService.doPostRequest( reqUrl, reqData, sCallback, eCallback );            };            $scope.doLogin = function( userId, pwd, userType ) {                var                gotSpaces = function( spaces ) {                    var                    reqUrl = "http://192.168.1.10:8181/cxf/auth/authenticateuser",                    reqData = {                        userid: userId,                        customerkey: spaces[ 0 ][ "customerKey" ],                        password: pwd,                        authType: userType,                    },                    sCallback = function( sData, sStatus, x, y ) {                        var userAuth;                        if( sData != undefined ) {                            userAuth = sData.users;                            if( userAuth != undefined ) {                                backendService.loginInfo.userAuth = userAuth;                            }                        }                     },                    eCallback = function( eData, eStatus, x, y ) {                    };                    if( spaces.length > 0 ) {                        backendService.doPostRequest( reqUrl, reqData, sCallback, eCallback );                    }                };                backendService.loginInfo.userId = userId;                $scope.getAllSpaces( userId, gotSpaces );            };            $scope.doLogout = function() {            };            /**             * [openView description]             * @param  {[type]} vName [description]             * @return {[type]}       [description]             */            $scope.openView = function( vName ) {                switch ( vName ) {                    case "FILE_MANAGER":                        $scope.appView = {                            view: "FILE_MANAGER",                            includePath: "app/modules/core/file-manager/file-manager.view.html"                        };                        break;                    case "DESIGNER":                        $scope.appView.view = "DESIGNER";                        // Loading DESIGNER on demand                        require( [ "appConfig", "designerCtrl" ], function( appConfig ) {                            $injector.loadNewModules( [ appConfig.modules.designer.name ] );                            $scope.appView.includePath = "app/modules/designer/designer.view.html";                            $scope.$apply();                        } );                        break;                    default:                        $scope.appView.view = "DEFAULT";                        $scope.appView.includePath = "app/modules/core/core.view.html"                        break;                }            };            /**             * [postInclude description]             * @param  {[type]} page [description]             * @return {[type]}      [description]             */            $scope.postInclude = function( page ) {                                switch( page ) {                    case "FILE_MANAGER":                        //FILE_SERVICE.initFileManager();                        break;                    default:                        break;                }                        };        };        return coreModule.controller(             appConfig.modules.core.ctrl,             [                appConfig.ngVars.scope,                appConfig.ngVars.injector,                appConfig.modules.core.services.coreDataService,                appConfig.modules.core.services.backendService,                coreCtrl            ]        );    };    define( [ "coreModule", "appConfig" ], requireCallback );} )();